<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2025, riru
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>jp.mydns.project-k</groupId>
    <artifactId>safi</artifactId>
    <version>3.0.0-M4</version>
    <packaging>war</packaging>
    <name>SAFI-${project.version}</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.release>21</maven.compiler.release>
        <maven.compiler.source>${maven.compiler.release}</maven.compiler.source>
        <maven.compiler.target>${maven.compiler.release}</maven.compiler.target>
        <maven.compiler.implicit>none</maven.compiler.implicit>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <jacocoArgLine/>

        <!-- Library versions -->
        <!-- Jakarta EE library versions must match GlassFish 7.0.21 -->
        <version.jakartaee>10.0.0</version.jakartaee>
        <version.swagger>2.2.28</version.swagger>
        <version.swagger-ui>5.18.3</version.swagger-ui>
        <!--<version.microprofile-config>3.1</version.microprofile-config>-->
        <!--<version.smallrye-config>3.5.0</version.smallrye-config>-->
        <!--<version.mockito>5.5.0</version.mockito>-->
        <version.junit>5.11.4</version.junit>
        <versin.slf4j>2.0.17</versin.slf4j>
        <version.eclipselink>4.0.3</version.eclipselink>
        <version.ulidj>1.0.4</version.ulidj>
        <version.assertj>3.27.3</version.assertj>
        <!--<version.mockito>5.2.0</version.mockito>-->
        <!--<version.hibernate-validator>8.0.1.Final</version.hibernate-validator>-->
        <version.expressly>5.0.0</version.expressly>
        <version.yasson>3.0.4</version.yasson>
        <!--<version.weld-junit5>4.0.1.Final</version.weld-junit5>-->
        <!--<version.h2>2.2.224</version.h2>-->
        <!--<version.bytebuddy>1.14.6</version.bytebuddy>-->
        <!--<version.k-plugin-mechanism>1.0.0</version.k-plugin-mechanism>-->
        <!--<version.k-formula-mechanism>1.0.0-M4</version.k-formula-mechanism>-->
        <!--<version.safi-pif>2.0.4</version.safi-pif>-->
        <version.jacoco>0.8.12</version.jacoco>
        <version.sonar>5.0.0.4389</version.sonar>

        <!-- Versions for Apache Maven Plugins -->
        <version.maven-surefire>3.5.2</version.maven-surefire>
        <version.maven-clean>3.4.1</version.maven-clean>
        <version.maven-resources>3.3.1</version.maven-resources>
        <version.maven-compiler>3.14.0</version.maven-compiler>
        <version.maven-war>3.4.0</version.maven-war>
        <version.maven-install>3.1.3</version.maven-install>
        <version.maven-javadoc>3.11.2</version.maven-javadoc>
        <version.maven-dependency>3.8.1</version.maven-dependency>
        <version.maven-antrun>3.1.0</version.maven-antrun>
    </properties>

    <licenses>
        <license>
            <name>BSD-2-Clause</name>
            <url>https://opensource.org/licenses/BSD-2-Clause</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <organization>
        <name>Project-K</name>
        <url>https://project-k.mydns.jp/</url>
    </organization>

    <dependencyManagement>
        <dependencies>
            <!-- JUnit Jupiter BOM -->
            <!-- License: EPL-2.0 -->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${version.junit}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Swagger UI -->
            <!-- License: APL-2.0 -->
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>swagger-ui</artifactId>
                <version>${version.swagger-ui}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Jakarta EE 10 API -->
        <!-- License: EPL-2.0 -->
        <!-- License: GPL-2.0 with Classpath Exception -->
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${version.jakartaee}</version>
            <scope>provided</scope>
        </dependency>

        <!-- SLF4J API -->
        <!-- License: MIT -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${versin.slf4j}</version>
        </dependency>

        <!-- SLF4J implemented by JUL(java.util.logging.Logger) -->
        <!-- License: MIT -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${versin.slf4j}</version>
        </dependency>

        <!-- Log4j implemented over SLF4J -->
        <!-- License: APL-2.0 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${versin.slf4j}</version>
        </dependency>

        <!-- Apache Commons Logging implemented over SLF4J -->
        <!-- License: APL-2.0 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${versin.slf4j}</version>
        </dependency>

        <!-- ULID library -->
        <!-- License: MIT -->
        <dependency>
            <groupId>io.azam.ulidj</groupId>
            <artifactId>ulidj</artifactId>
            <version>${version.ulidj}</version>
        </dependency>

        <!-- Swagger Annotations for Jakarta EE -->
        <!-- License: APL-2.0 -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations-jakarta</artifactId>
            <version>${version.swagger}</version>
            <scope>provided</scope>
        </dependency>

        <!-- EclipseLink JPA Model Generator -->
        <!-- License: EPL-2.0 -->
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
            <version>${version.eclipselink}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Assertion utilities -->
        <!-- License: APL-2.0 -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${version.assertj}</version>
            <scope>test</scope>
        </dependency>

        <!-- JUnit Jupiter -->
        <!-- License: EPL-2.0 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Jakarta EL implements -->
        <!-- License: EPL-2.0 -->
        <!-- License: GPL -->
        <dependency>
            <groupId>org.glassfish.expressly</groupId>
            <artifactId>expressly</artifactId>
            <version>${version.expressly}</version>
            <scope>test</scope>
        </dependency>

        <!-- Jakarta JSON-B implements -->
        <!-- License: EDL-1.0 -->
        <!-- License: EPL-2.0 -->
        <dependency>
            <groupId>org.eclipse</groupId>
            <artifactId>yasson</artifactId>
            <version>${version.yasson}</version>
            <scope>test</scope>
        </dependency>


        <!--        <dependency>
            <groupId>jp.mydns.project-k</groupId>
            <artifactId>safi-plugin-interface</artifactId>
            <version>${version.safi-pif}</version>
        </dependency>-->
        <!--        <dependency>
            <groupId>jp.mydns.project-k</groupId>
            <artifactId>k-plugin-mechanism</artifactId>
            <version>${version.k-plugin-mechanism}</version>
        </dependency>-->
        <!--        <dependency>
            <groupId>jp.mydns.project-k</groupId>
            <artifactId>k-formula-mechanism</artifactId>
            <version>${version.k-formula-mechanism}</version>
        </dependency>-->
        <!--        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <version>${version.microprofile-config}</version>
            <scope>provided</scope>
        </dependency>-->

        <!--        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>-->
        <!--        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${version.mockito}</version>
            <scope>test</scope>
        </dependency>-->
        <!--        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${version.mockito}</version>
            <scope>test</scope>
        </dependency>-->
        <!--        <dependency>
            <groupId>io.smallrye.config</groupId>
            <artifactId>smallrye-config</artifactId>
            <version>${version.smallrye-config}</version>
            <scope>test</scope>
        </dependency>-->
        <!--        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${version.hibernate-validator}</version>
            <scope>test</scope>
        </dependency>-->

        <!--        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-junit5</artifactId>
            <version>${version.weld-junit5}</version>
            <scope>test</scope>
        </dependency>-->
        <!--        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.2.224</version>
            <scope>test</scope>
        </dependency>-->
        <!--        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <version>3.1.5</version>
            <scope>test</scope>
        </dependency>-->
        <!--        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.2.0</version>
            <scope>test</scope>
        </dependency>-->
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- License: APL-2.0 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${version.maven-clean}</version>
                </plugin>

                <!-- License: APL-2.0 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${version.maven-compiler}</version>
                </plugin>

                <!-- License: APL-2.0 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${version.maven-install}</version>
                </plugin>

                <!-- License: APL-2.0 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${version.maven-resources}</version>
                </plugin>

                <!-- License: APL-2.0 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${version.maven-javadoc}</version>
                </plugin>

                <!-- License: APL-2.0 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${version.maven-surefire}</version>
                </plugin>

                <!-- License: APL-2.0 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${version.maven-war}</version>
                </plugin>

                <!-- License: APL-2.0 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${version.maven-dependency}</version>
                </plugin>

                <!-- License: APL-2.0 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${version.maven-antrun}</version>
                </plugin>

                <!-- License: EPL-2.0 -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${version.jacoco}</version>
                </plugin>

                <!-- License: APL-2.0 -->
                <plugin>
                    <groupId>io.swagger.core.v3</groupId>
                    <artifactId>swagger-maven-plugin-jakarta</artifactId>
                    <version>${version.swagger}</version>
                </plugin>

                <!-- Static analysis -->
                <!-- License: LGPL 3.0 -->
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${version.sonar}</version>
                </plugin>

                <!--                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>-->
                <!--                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.2.3</version>
                </plugin>-->

                <!--                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>4.0.0-M13</version>
                </plugin>-->

                <!--                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-verifier-plugin</artifactId>
                    <version>1.1</version>
                </plugin>-->
                <!--                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>-->

                <!--                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>-->

                <!--                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>-->
                <!--                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.6.0</version>
                </plugin>-->

                <!--                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>-->
            </plugins>
        </pluginManagement>


        <plugins>
            <!-- Specified compiler options -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgs>
                        <arg>-Xlint:-options</arg>
                        <arg>-proc:full</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- Specified unit test options -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>@{jacocoArgLine} -Dfile.encoding=${project.build.sourceEncoding}</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release-profile</id>

            <build>
                <plugins>
                    <!-- Report code coverage. -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <configuration>
                            <propertyName>jacocoArgLine</propertyName>
                            <excludes>
                                Exclude the automatically generated codes.
                                <exclude>**/*_.*</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Make JavaDoc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <sourceFileExcludes>
                                Exclude the automatically generated codes.
                                <exclude>**/*_.*</exclude>
                            </sourceFileExcludes>
                            <links>
                                <link>https://jakarta.ee/specifications/platform/10/apidocs</link>
                            </links>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>javadoc</goal>
                                </goals>
                                <configuration>
                                    <additionalOptions>
                                        <additionalOption>-Xdoclint:all,-missing</additionalOption>
                                    </additionalOptions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Make OpenAPI JSON. -->
                    <plugin>
                        <groupId>io.swagger.core.v3</groupId>
                        <artifactId>swagger-maven-plugin-jakarta</artifactId>
                        <configuration>
                            <outputPath>${project.build.directory}</outputPath>
                            <prettyPrint>TRUE</prettyPrint>
                            <contextId>${project.build.finalName}</contextId>
                            <resourcePackages>jp.mydns.projectk.safi</resourcePackages>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>resolve</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Fetch Swagger UI -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-swagger-ui</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.webjars</groupId>
                                            <artifactId>swagger-ui</artifactId>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>${project.build.directory}/swagger-ui</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Replace URL of Swagger UI to OpenAPI JSON. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <replace file="${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/${version.swagger-ui}/swagger-initializer.js"
                                                 token="https://petstore.swagger.io/v2/swagger.json"
                                                 value="openapi.json"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>


                    <!-- Create the war package. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <executions>
                            <!-- Appends Swagger UI. -->
                            <execution>
                                <id>copy-swagger-ui</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>war</goal>
                                </goals>
                                <configuration>
                                    <webResources>
                                        <resource>
                                            <directory>${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/${version.swagger-ui}</directory>
                                            <includes>
                                                <include>**/*.*</include>
                                            </includes>
                                            <targetPath>swagger</targetPath>
                                        </resource>
                                    </webResources>
                                </configuration>
                            </execution>

                            <!-- Appends JavaDoc. -->
                            <execution>
                                <id>copy-javadoc</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>war</goal>
                                </goals>
                                <configuration>
                                    <webResources>
                                        <resource>
                                            <directory>${project.build.directory}/reports/apidocs</directory>
                                            <includes>
                                                <include>**/*.*</include>
                                            </includes>
                                            <targetPath>javadoc</targetPath>
                                        </resource>
                                    </webResources>
                                </configuration>
                            </execution>

                            <!-- Appends OpenAPI JSON. -->
                            <execution>
                                <id>copy-openapi-json</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>war</goal>
                                </goals>
                                <configuration>
                                    <webResources>
                                        <resource>
                                            <directory>${project.build.directory}</directory>
                                            <includes>
                                                <include>openapi.json</include>
                                            </includes>
                                            <targetPath>swagger</targetPath>
                                        </resource>
                                    </webResources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--        <profile>
            <id>release-profile</id>

            <build>
                <plugins>




                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <argLine>@{jacocoArgLine} -Dfile.encoding=${project.build.sourceEncoding}</argLine>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>-->
    </profiles>
</project>
